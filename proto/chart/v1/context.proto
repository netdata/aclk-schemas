syntax = "proto3";

package chart.v1;

import "google/protobuf/timestamp.proto";

import "proto/aclk/v1/lib.proto";

option go_package = "chart/context/v1;chartcontext";

// ContextUpdated contains context data.
message ContextUpdated {
    // context id
    string id = 1;
    // claim_id, node_id pair is used to identify the node instance
    string claim_id = 2;
    string node_id = 3;
    // first_entry, last_entry are used to set the time boudaries of the context
    google.protobuf.Timestamp first_entry = 4;
    google.protobuf.Timestamp last_entry = 5;
    // deleted flag is used to signal a context deletion
    bool deleted = 6;
    // chart_type, title and priority are specific information related with
    // context visualization
    string chart_type = 7;
    string title = 8;
    uint32 priority = 9;
    // position contains sequence information related with this context update
    aclk_lib.v1.ACLKMessagePosition position = 10;
}

// ContextsUpdated is an Event produced by the Agent, consumed by the Cloud.
//
// it contains a collection of ContextUpdated messages for a specific NodeInstance.
message ContextsUpdated {
    // contexUpdates contains the collection of context updates
    repeated ContextUpdated contextUpdates = 1;
    // claim_id, node_id pair identifies the node instance
    string claim_id = 2;
    string node_id = 3;
    // batch_id identifies the stream_id
    uint64 batch_id = 4;
    // position contains sequence information related with this bundle message
    aclk_lib.v1.ACLKMessagePosition position = 5;
}

// StartStreamingContexts is a Command produced by the Cloud, consumed by the Agent.
//
// It instructs the Agent to start sending ContextsUpdated messages for a NodeInstance
// after the last sequence_id that the Cloud has successfully ingested.
message StartStreamingContexts {
    // claim_id, node_id pair is used to identify the node instance
    string claim_id = 1;
    string node_id = 2;
    // sequence_id last verified sequence sent by the Agent
    uint64 sequence_id = 3;
    // batch_id identifies the stream_id and gets incremented every time the Cloud sends a new StartStreamingContexts command
    uint64 batch_id = 4;
    // seq_id_created_at autogenerated timestamp in Agent's DB upon sequence_id creation
    google.protobuf.Timestamp seq_id_created_at = 5;
}

// StopStreamingContexts is a Command produced by the Cloud, consumed by the Agent.
//
// It instructs the Agent to stop sending ContextsUpdated messages for a NodeInstance
// due to a reason.
message StopStreamingContexts {
    // claim_id, node_id pair is used to identify the node instance
    string claim_id = 1;
    string node_id = 2;
    
    StopStreamingContextsReason reason = 3;
}

enum StopStreamingContextsReason {
  RATE_LIMIT_EXCEEDED = 0;
}

// ResetContextMessages is a command produced by the Agent, consumed by the Cloud.
//
// This command instructs the Cloud to clear its Context state for a specific NodeInstance and re-sync
// because of a reason.
message ResetContextMessages {
    // claim_id, node_id pair is used to identify the Node Instance
    string claim_id = 1;
    string node_id = 2;
  
    ResetContextReason reason = 3;
}

enum ResetContextReason {
    DB_EMPTY = 0;
    SEQ_ID_NOT_EXISTS = 1;
    TIMESTAMP_MISMATCH = 2;
}
