syntax = "proto3";

package chart.v1;

import "google/protobuf/timestamp.proto";

option go_package = "chart/stream/v1;chartstream";

message StreamChartsAndDimensions {
  // claim_id, node_id pair is used to identify the Node Instance
  string claim_id = 1;
  string node_id = 2;

  // sequence_id last verified sequence sent by the Agent
  uint64 sequence_id = 3;
  // batch_id identifies the stream_id and gets incremented every time the Cloud sends a new StreamChartsAndDimensions command
  uint64 batch_id = 4;
  // seq_id_created_at autogenerated timestamp in Agent's DB upon sequence_id creation
  google.protobuf.Timestamp seq_id_created_at = 5;
}

message ChartsAndDimensionsAck {
  string claim_id = 1;
  string node_id = 2;
  // the last verified stored message's seq_id
  uint64 last_sequence_id = 3;
}

message ResetChartMessages {
  ResetReason reason = 1;
}

enum ResetReason {
  DB_EMPTY = 0;
  SEQ_ID_NOT_EXISTS = 1;
  TIMESTAMP_MISMATCH = 2;
}
